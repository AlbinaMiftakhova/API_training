<?xml version="1.0"?>
<doc>
    <assembly>
        <name>API_training</name>
    </assembly>
    <members>
        <member name="T:API_training.Common.DocumentPartsConst">
            <summary>
            Константы для указания частей API в Swagger.
            </summary>
        </member>
        <member name="F:API_training.Common.DocumentPartsConst.Books">
            <summary>
            Константа для swagger-документа "Одежда".
            </summary>
        </member>
        <member name="T:API_training.Common.SwaggerConfiguration">
            <summary>
            Расширения для конфигурации Swagger.
            </summary>
        </member>
        <member name="M:API_training.Common.SwaggerConfiguration.ConfigureSwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Настройка документов Swagger.
            </summary>
            <param name="services">Коллекция сервисов для DI.</param>
        </member>
        <member name="T:API_training.Controllers.BooksController">
            <summary>
            Контроллер для работы с данными о книгах.
            </summary>
        </member>
        <member name="M:API_training.Controllers.BooksController.#ctor(API_training.Services.Interfaces.IBooksInterface,Microsoft.Extensions.Logging.ILogger{API_training.Controllers.BooksController})">
            <summary>
            Инициализирует экземпляр <see cref="T:API_training.Controllers.BooksController"/>
            </summary>
            <param name="booksService">Сервис одежды.</param>
            <param name="logger">Логгер.</param>
        </member>
        <member name="M:API_training.Controllers.BooksController.Get">
            <summary>
            Получение перечня доступных книг.
            </summary>
            <returns>Коллекция сущностей "Книги".</returns>
        </member>
        <member name="M:API_training.Controllers.BooksController.GetById(System.Int64)">
            <summary>
            Получение книги по идентификатору.
            </summary>
            <param name="id">Идентификатор книги</param>
            <returns>Сущность "Книга"</returns>
        </member>
        <member name="M:API_training.Controllers.BooksController.AddBook(System.String,System.String,System.Int64,System.String,System.Int32)">
            <summary>
            Добавляет книгу в список доступных.
            </summary>
            <param name="name">Название книги</param>
            <param name="author">Автор книги</param>
            <param name="id">Идентификатор книги</param>
            <param name="publisher">Издательство</param>
            <param name="publishingYear">Год издания</param>
            <returns>Новый список доступных книг.</returns>
        </member>
        <member name="M:API_training.Controllers.BooksController.DeleteBook(System.Int64)">
            <summary>
            Удаляет сущность "Книги" с заданным идентификатором.
            </summary>
            <param name="id">Идентификатор книги</param>
            <returns>Новый список доступных книг.</returns>
        </member>
        <member name="M:API_training.Controllers.BooksController.SortByName">
            <summary>
            Сортирует список сущностей "Книги" по названию.
            </summary>
            <returns>Возвращает отсортированный список сущностей "Книги"</returns>
        </member>
        <member name="T:API_training.Startup">
            <summary>
            Конфигурация приложения.
            </summary>
        </member>
        <member name="M:API_training.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:API_training.Startup"/>.
            </summary>
            <param name="configuration">Конфигурация.</param>
        </member>
        <member name="P:API_training.Startup.Configuration">
            <summary>
            Конфигурация
            </summary>
        </member>
        <member name="M:API_training.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Mетод вызывается средой исполнения. Используется для регистрации сервисов в IoC контейнере.
            </summary>
            <param name="services">Коллекция сервисов.</param>
        </member>
        <member name="M:API_training.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Mетод вызывается средой исполнения. Используется для конфигурации окружения для обработки HTTP запроса.
            </summary>
            <param name="app">Средство конфигурации приложения.</param>
            <param name="env">Информация об окружении, в котором работает приложение.</param>
        </member>
    </members>
</doc>
